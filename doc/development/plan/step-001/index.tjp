project your_project_id "PR step 001"  2016-11-01-0:00--0500 +4m {
  # Hide the clock time. Only show the date.
  timeformat "%Y-%m-%d"
  # Use US format for numbers
  numberformat "-" "" "," "." 1
  # Use US financial format for currency values. Don't show cents.
  currencyformat "(" ")" "," "." 0
  # Pick a day during the project that will be reported as 'today' in
  # the project reports. If not specified, the current day will be
  # used, but this will likely be outside of the project range, so it
  # can't be seen in the reports.
  now 2016-11-01
  currency "USD"

  # You can define multiple scenarios here if you need them.
  scenario plan "Plan" {
    scenario actual "Actual"
  }
  trackingscenario actual

  # You can define your own attributes for tasks and resources. This
  # is handy to capture additional information about the project that
  # is not directly impacting the project schedule but you like to
  # keep in one place.
  extend task {
    reference Spec "Link to Wiki page"
    reference GH "Link to GitHub"
  }
  extend resource {
    reference GH "Link to GitHub"
  }

  timingresolution 15min

  # Work all day, work all night
  workinghours mon - sun 9:00 - 12:00, 17:00 - 22:00
}

copyright "Project Renard"

# You can attach flags to accounts, resources and tasks. These can be
# used to filter out subsets of them during reporting.
flags important, hidden

# The daily default rate of all resources. This can be overridden for each
# resource. We specify this, so that we can do a good calculation of
# the costs of the project.
rate 400.0

# This is a set of example resources.
resource dev "Developers" {
  resource helen "Helen Bach" {
    limits {
      dailymax 1h
      weeklymax 10h
    }
    GH "https://github.com/helenbach"
  }
  resource stan "Stanislav Yotov" {
    limits {
      dailymax 1h
      weeklymax 10h
    }
    GH "https://github.com/StayerX"
  }
  resource zaki "Zaki Mughal" {
    limits {
      dailymax 1h
      weeklymax 10h
    }
    GH "https://github.com/zmughal"
  }
}
macro AllocateAnyDeveloper [
  allocate helen { alternative stan, zaki }
]

task start "Project start" {
  milestone
  start ${projectstart}
}

task data "Data" {
  task format "Format" {
    task pdf "PDF" {
      task mutool "mutool" {
        task zoom "Add zoom parameter to MuPDF calls" {
          allocate zaki
          effort 30min
          actual:start 2016-11-02
          actual:effort 1h
        }
      }
      task mupdf "mupdf" {
        task xs "XS bindings" {
          allocate helen,stan,zaki # everyone should learn this
          effort 15h
        }
      }
    }
    task odt "OpenDocument text" {
      task write "Write support" {
        GH "https://github.com/project-renard/curie/issues/55"
      }
    }
    task epub "ePub" {
    }
  }
  task model "Model" {
    task refactor_201611 "Refactor views into view-models" {
      allocate zaki
      effort 2h
      GH "https://github.com/project-renard/curie/issues/150"
    }
    task viewports "Viewports" {
      effort 2h
      ${AllocateAnyDeveloper}
      depends !!format.pdf.mupdf.xs, !refactor_201611
      note "For rendering only part of a page"
    }
    task split_201612 "Split view models into separate packages" {
      allocate zaki
      effort 4h
      GH "https://github.com/project-renard/curie/issues/26"
      depends !viewports
    }
  }
}

task curie "Curie" {
  task nav "Navigation" {
    task zoom "Zoom" {
      depends data.format.pdf.mutool.zoom
      allocate zaki { persistent }
      task menu "Zoom using menu" {
        effort 1h
        actual:start 2016-11-02
        actual:effort 1h
      }
      task entry "Zoom using text entry" {
        task "Place text entry in GUI" {
          effort 1h
        }
        task "Hook up text-entry callbacks" {
          effort 1h
          note "Validate input"
        }
      }
      task scrollwheel "Zoom using scrollwheel" {
        effort 2h
        GH "https://github.com/project-renard/curie/issues/15"
      }
      task viewport "Zoom using viewports" {
        ${AllocateAnyDeveloper}
        depends data.model.viewports
        effort 3h
      }
      task "Pinch to zoom" {
        effort 2h
        depends !!!ui.canvas
        GH "https://github.com/project-renard/curie/issues/106"
      }
    }
    task outline "Outline" {
      task position "Specific page position" {
        ${AllocateAnyDeveloper}
        effort 4h
        depends data.format.pdf.mupdf.xs, data.model.refactor_201611
        GH "https://github.com/project-renard/curie/issues/149"
      }
    }
    task rotate "Rotate page" {
      GH "https://github.com/project-renard/curie/issues/16"
    }
    task "PDF hyperlinks" {
      GH "https://github.com/project-renard/curie/issues/79"
    }
    task scroll "Scrolling" {
      task page_tb "Create methods for scrolling to top/bottom of the page" {
        GH "https://github.com/project-renard/curie/issues/54"
      }
    }
  }
  task build "Build" {
    task mac "macOS" {
      task dmg "Build script to create DMG for curie" {
        allocate zaki
        effort 7h
      }
      task "Make sure that icons are available on macOS" {
        GH "https://github.com/project-renard/curie/issues/165"
      }
    }
    task "Unix packaging" {
      GH "https://github.com/project-renard/curie/issues/97"
    }
    task "GTK+ Mac OS X setup" {
      GH "https://github.com/project-renard/curie/issues/102"
    }
    task "Packaging meta-issue" {
      GH "https://github.com/project-renard/curie/issues/109"
    }
    task "GPG keys for packaging" {
      GH "https://github.com/project-renard/curie/issues/121"
    }
    task "Appveyor: 32-bit build" {
      GH "https://github.com/project-renard/curie/issues/88"
    }
    task "Signed code certificate" {
      GH "https://github.com/project-renard/curie/issues/93"
    }
  }
  task data "Data" {
    task recent "Recently opened files" {
      ${AllocateAnyDeveloper}
      effort 2h
      note "Save paths to recently opened files"
      GH "https://github.com/project-renard/curie/issues/12"
    }
    task display_pdf_metadata "Add dialog that shows PDF metadata" {
      ${AllocateAnyDeveloper}
      effort 1h
      GH "https://github.com/project-renard/curie/issues/13"
    }
    task "Be able to open files inside of archives" {
      GH "https://github.com/project-renard/curie/issues/82"
    }
  }
  task render "Render" {
    task pdf_text "Render PDF as text" {
      ${AllocateAnyDeveloper}
      effort 2h
      GH "https://github.com/project-renard/curie/issues/17"
    }
    task pdf_html "Render PDF as HTML" {
      effort 2h
      ${AllocateAnyDeveloper}
      GH "https://github.com/project-renard/curie/issues/18"
    }
    task abiword "Abiword" {
      task embed "Embed Abiword" {
        depends data.format.odt.write
        GH "https://github.com/project-renard/curie/issues/57"
      }
    }
  }
  task ui "UI" {
    task dnd_files "Drag and drop for opening files" {
      effort 2h
      allocate stan
      GH "https://github.com/project-renard/curie/issues/19"
    }
    task copy_paste "Copy and paste" {
      depends !canvas,!!render.pdf_text
    }
    task canvas "Render to canvas" {
      effort 3h
      allocate zaki
      GH "https://github.com/project-renard/curie/issues/27"
    }
    task theming "GTK+ icon and color theming" {
      effort 2h
      allocate zaki
      depends !!build.mac.dmg
      GH "https://github.com/project-renard/curie/issues/32"
    }
    task presentation_mode "Presentation mode" {
      effort 3h
      GH "https://github.com/project-renard/curie/issues/36"
      ${AllocateAnyDeveloper}
    }
    task translation "Translations" {
      task gettext "gettext integration" {
        GH "https://github.com/project-renard/curie/issues/44"
      }
    }
    task "Dual page display" {
      GH "https://github.com/project-renard/curie/issues/94"
    }
  }

  task nlp "Natural language processing" {
    task "Use ParsCit on the plain text" {
      GH "https://github.com/project-renard/curie/issues/76"
    }
    task "Query online translation services" {
      GH "https://github.com/project-renard/curie/issues/80"
    }
    task "Query local and online dictionaries" {
      GH "https://github.com/project-renard/curie/issues/81"
    }
    task "Speech recognition feedback system" {
      GH "https://github.com/project-renard/curie/issues/169"
    }
    task "Rudimentary speech synthesis" {
      GH "https://github.com/project-renard/curie/issues/148"
    }
  }
  task misc "Miscellaneous" {
    task "Plot using R to Cairo device" {
      GH "https://github.com/project-renard/curie/issues/66"
    }
  }

  task bug "Bugs" {
    task status_bar_GH40 "The status bar is too wide" {
      GH "https://github.com/project-renard/curie/issues/40"
    }
    task "Track MSYS2 pl2bat issue" {
      GH "https://github.com/project-renard/curie/issues/119"
    }
    task "Track issue between Function::Parameters, Return::Type, and Devel::Cover" {
      GH "https://github.com/project-renard/curie/issues/120"
    }
    task "Track PAR GUI output capture issue" {
      GH "https://github.com/project-renard/curie/issues/128"
    }
    task "Track PAR XSLoader issue on MSYS2/MinGW64" {
      GH "https://github.com/project-renard/curie/issues/122"
    }
    task "Figure out why Gtk3 can not load 'libcairo-gobject.2.dylib' on macOS" {
      GH "https://github.com/project-renard/curie/issues/167"
    }
    task "Fix focus for the text field and page drawing area" {
      GH "https://github.com/project-renard/curie/issues/101"
    }
  }

  task qa  "Quality assurance" {
    task "Gather feedback on GUI" {
      GH "https://github.com/project-renard/curie/issues/123"
    }
    task "Make sure that FileChooserDialog shows consistent interface" {
      GH "https://github.com/project-renard/curie/issues/166"
    }
    task "Dump version numbers of libraries used" {
      GH "https://github.com/project-renard/curie/issues/168"
    }
    task "Ensure that the application menu is at the top bar" {
      GH "https://github.com/project-renard/curie/issues/160"
    }
    task "Figure out how to run curie tests on release" {
      GH "https://github.com/project-renard/curie/issues/130"
    }
  }
  task milestone "Milestone" {
    task m0_002 "v0.002" {
      depends !!nav.zoom.menu,!!build.mac.dmg
      #actual:complete 0
    }
    task m0_003 "v0.003" {
      depends !m0_002
      depends !!nav.zoom.entry,!!ui.theming
      actual:complete 0
    }
    task m0_004 "v0.004" {
      depends !m0_003
      depends !!nav.outline.position,!!nav.zoom.viewport,data.model.split_201612
      actual:complete 0
    }
  }
}

task deliveries "Deliveries" {
  allocate zaki { persistent } # release manager
  task "Curie release v0.002" {
    milestone
    depends start
    depends curie.milestone.m0_002
    #actual:complete 0
    maxend 2016-11-14
  }
  task "Curie release v0.003" {
    milestone
    depends curie.milestone.m0_003
    maxend 2016-11-28
  }
  task "Curie release v0.004" {
    milestone
    depends curie.milestone.m0_004
    maxend 2016-12-14
  }
}

# Now the project has been specified completely. Stopping here would
# result in a valid TaskJuggler file that could be processed and
# scheduled. But no reports would be generated to visualize the
# results.

navigator navbar {
  hidereport 0
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='resources'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

textreport frame "" {
  header -8<-
    == Project Renard Step 001 ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"
  textreport index "Overview" {
    formats html
    center -8<-
      <[report id="overview.plan"]>
    ->8-
  }

  textreport index_actual "Overview (actual)" {
    formats html
    center -8<-
      <[report id="overview.actual"]>
    ->8-
  }

  textreport "Status" {
    formats html
    center -8<-
      <[report id="status.dashboard"]>
      ----
      <[report id="status.completed"]>
      ----
      <[report id="status.ongoing"]>
      ----
      <[report id="status.future"]>
    ->8-
  }

  textreport "Deliveries" {
    formats html
    center '<[report id="deliveries"]>'
  }

  textreport "Resource Graph" {
    formats html
    center '<[report id="resourceGraph"]>'
  }
}

# A traditional Gantt chart with a project overview.
taskreport overview "" {
  columns bsi { title 'WBS' },
          name, start, end, effort,
          GH,
          chart { scale day width 1200 ${TaskTip} }
  # For this report we like to have the abbreviated weekday in front
  # of the date. %a is the tag for this.
  timeformat "%a %Y-%m-%d"
  loadunit hours
  hideresource 1
  caption 'All effort values are in man hours.'
  taskreport plan "Original Project Plan" {
    header -8<-
      === Original Project Plan ===
    ->8-
    scenarios plan
  }
  taskreport actual "Actual Project Plan" {
    header -8<-
      === Actual Project Plan ===
    ->8-
    scenarios actual
  }
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor actual.alert = 0 "#00D000" # green
  cellcolor actual.alert = 1 "#D0D000" # yellow
  cellcolor actual.alert = 2 "#D00000" # red
]

taskreport status "" {
  scenarios actual
  columns bsi { width 50 title 'WBS' }, name { width 150 },
          start { width 100 }, end { width 100 },
          effort { width 100 },
          alert { tooltip plan.journal
                          != '' "<-query attribute='journal'->" width 150 },
          GH,
          status { width 150 }

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
                        listtype bullets
                        listitem "<-query attribute='name'->"
                        start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
    journalmode status_up
    journalattributes headline, author, date, summary, details
    hidetask ~hasalert(0)
    sorttasks alert.down, actual.end.up
    period %{${now} - 1w} +1w
  }
  taskreport completed "" {
    headline "Already completed tasks"
    hidetask ~(actual.end <= ${now})
  }
  taskreport ongoing "" {
    headline "Ongoing tasks"
    hidetask ~((actual.start <= ${now}) & (actual.end > ${now}))
  }
  taskreport future "" {
    headline "Future tasks"
    hidetask ~(actual.start > ${now})
  }
}

# A list of all tasks with the percentage completed for each task
taskreport deliveries "" {
  headline "Project Deliverables"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete, GH,
          chart { width 800 ${TaskTip} }
  taskroot deliveries
  hideresource 1
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  scenarios actual
  headline "Resource Allocation Graph"
  columns no, name, effort, GH, daily { width 800 ${TaskTip} }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  hidetask ~(isleaf() & isleaf_())
  sorttasks start.up
}

taskreport csvreport "OverviewAsCSV" {
  formats csv
  columns id, name, start, end, duration, resources, effort, children, precursors, GH
  sorttasks tree
  loadunit months
}

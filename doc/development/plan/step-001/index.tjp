project your_project_id "PR step 001"  2016-10-20-0:00--0500 +4m {
  # Hide the clock time. Only show the date.
  timeformat "%Y-%m-%d"
  # Use US format for numbers
  numberformat "-" "" "," "." 1
  # Use US financial format for currency values. Don't show cents.
  currencyformat "(" ")" "," "." 0
  # Pick a day during the project that will be reported as 'today' in
  # the project reports. If not specified, the current day will be
  # used, but this will likely be outside of the project range, so it
  # can't be seen in the reports.
  #now 2016-10-20
  currency "USD"

  # You can define multiple scenarios here if you need them.
  scenario plan "Plan" {
    scenario actual "Actual"
  }

  # You can define your own attributes for tasks and resources. This
  # is handy to capture additional information about the project that
  # is not directly impacting the project schedule but you like to
  # keep in one place.
  #extend task {
  #  reference spec "Link to Wiki page"
  #}

  timingresolution 15min
}

copyright "Project Renard"

# You can attach flags to accounts, resources and tasks. These can be
# used to filter out subsets of them during reporting.
flags important, hidden

# The daily default rate of all resources. This can be overridden for each
# resource. We specify this, so that we can do a good calculation of
# the costs of the project.
rate 400.0

# This is a set of example resources.
resource dev "Developers" {
  resource helen "Helen Bach" {
    limits { dailymax 1h }
  }
  resource stan "Stanislav Yotov" {
    limits { dailymax 1h }
  }
  resource zaki "Zaki Mughal" {
    limits { dailymax 1h }
  }
}

task curie "Curie" {
  task nav "Navigation" {
    task zoom "Zoom" {
      allocate zaki { persistent }
      task mupdf_zoom "Add zoom parameter to MuPDF calls" {
        effort 30min
        actual:start 2016-10-24
        actual:effort 1h
      }
      task menu "Zoom using menu" {
        effort 1h
        actual:start 2016-10-24
        actual:effort 1h
        depends !mupdf_zoom
      }
      task entry "Zoom using text entry" {
        depends !mupdf_zoom
        task "Place text entry in GUI" {
          effort 1h
        }
        task "Hook up text-entry callbacks" {
          effort 1h
          note "Validate input"
        }
      }
    }
  }

  task m0_002 "v0.002" {
    depends curie.nav.zoom.menu
    actual:complete 0
  }
  task m0_003 "v0.003" {
    depends !m0_002
    depends curie.nav.zoom.entry
    actual:complete 0
  }
  task m0_004 "v0.004" {
    depends !m0_003
    actual:complete 0
  }
}

task deliveries "Deliveries" {
  allocate zaki { persistent } # release manager
  task "Curie release v0.002" {
    milestone
    depends curie.m0_002
    end 2016-10-31
  }
  task "Curie release v0.003" {
    milestone
    depends curie.m0_003
    end 2016-11-14
  }
  task "Curie release v0.004" {
    milestone
    depends curie.m0_004
    end 2016-11-28
  }
}

# Now the project has been specified completely. Stopping here would
# result in a valid TaskJuggler file that could be processed and
# scheduled. But no reports would be generated to visualize the
# results.

navigator navbar {
  hidereport 0
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='resources'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

textreport frame "" {
  header -8<-
    == Project Renard Step 001 ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"
  textreport index "Overview" {
    formats html
    center -8<-
      <[report id="overview.plan"]>
      ----
      <[report id="overview.actual"]>
    ->8-
  }

  textreport "Status" {
    formats html
    center -8<-
      <[report id="status.dashboard"]>
      ----
      <[report id="status.completed"]>
      ----
      <[report id="status.ongoing"]>
      ----
      <[report id="status.future"]>
    ->8-
  }

  textreport "Deliveries" {
    formats html
    center '<[report id="deliveries"]>'
  }

  textreport "Resource Graph" {
    formats html
    center '<[report id="resourceGraph"]>'
  }
}

# A traditional Gantt chart with a project overview.
taskreport overview "" {
  columns bsi { title 'WBS' },
          name, start, end, effort,
          chart { ${TaskTip} }
  # For this report we like to have the abbreviated weekday in front
  # of the date. %a is the tag for this.
  timeformat "%a %Y-%m-%d"
  loadunit days
  hideresource 1
  caption 'All effort values are in man days.'
  taskreport plan "Original Project Plan" {
    header -8<-
      === Original Project Plan ===
    ->8-
    scenarios plan
  }
  taskreport actual "Actual Project Plan" {
    header -8<-
      === Actual Project Plan ===
    ->8-
    scenarios actual
  }
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor actual.alert = 0 "#00D000" # green
  cellcolor actual.alert = 1 "#D0D000" # yellow
  cellcolor actual.alert = 2 "#D00000" # red
]

taskreport status "" {
  scenarios actual
  columns bsi { width 50 title 'WBS' }, name { width 150 },
          start { width 100 }, end { width 100 },
          effort { width 100 },
          alert { tooltip plan.journal
                          != '' "<-query attribute='journal'->" width 150 },
          status { width 150 }

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
                        listtype bullets
                        listitem "<-query attribute='name'->"
                        start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
    journalmode status_up
    journalattributes headline, author, date, summary, details
    hidetask ~hasalert(0)
    sorttasks alert.down, actual.end.up
    period %{${now} - 1w} +1w
  }
  taskreport completed "" {
    headline "Already completed tasks"
    hidetask ~(actual.end <= ${now})
  }
  taskreport ongoing "" {
    headline "Ongoing tasks"
    hidetask ~((actual.start <= ${now}) & (actual.end > ${now}))
  }
  taskreport future "" {
    headline "Future tasks"
    hidetask ~(actual.start > ${now})
  }
}

# A list of all tasks with the percentage completed for each task
taskreport deliveries "" {
  headline "Project Deliverables"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete,
          chart { ${TaskTip} }
  taskroot deliveries
  hideresource 1
}

taskreport csvreport "OverviewAsCSV" {
  formats csv
  columns id, name, start, end, duration, resources, effort, children, precursors
  sorttasks tree
  loadunit months
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  scenarios actual
  headline "Resource Allocation Graph"
  columns no, name, effort, rate, weekly { ${TaskTip} }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  hidetask ~(isleaf() & isleaf_())
  sorttasks plan.start.up
}

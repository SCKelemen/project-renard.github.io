<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
<title>pages tagged type/format</title>
<link href="http://project-renard.github.io//tag/type/format/"/>
<link href="http://project-renard.github.io//tag/type/format/index.atom" rel="self" type="application/atom+xml"/>
<author>

<name>Project Renard</name>

</author>




<id>http://project-renard.github.io//tag/type/format/</id>

<subtitle type="html">Project Renard</subtitle>
<generator uri="http://ikiwiki.info/" version="3.20120202ubuntu1">ikiwiki</generator>
<updated>2016-02-21T00:53:05Z</updated>
<entry>
	<title>getfield</title>

	<id>http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/getfield/</id>

	<link href="http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/getfield/"/>






	<category term="type/format" />

	<category term="type/meta" />


	<updated>2016-02-21T00:53:05Z</updated>
	<published>2016-02-21T00:53:05Z</published>

	<content type="html" xml:lang="en">
	&lt;p&gt;[[!template &lt;span class=&quot;error&quot;&gt;Error: failed to process template &lt;span class=&quot;createlink&quot;&gt;plugin&lt;/span&gt; &lt;/span&gt;]]&lt;/p&gt;

&lt;h2 id=&quot;name&quot;&gt;NAME&lt;/h2&gt;

&lt;p&gt;IkiWiki::Plugin::getfield - query the values of fields&lt;/p&gt;

&lt;h2 id=&quot;synopsis&quot;&gt;SYNOPSIS&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# activate the plugin
add_plugins =&amp;gt; [qw{goodstuff getfield ....}],
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;description&quot;&gt;DESCRIPTION&lt;/h2&gt;

&lt;p&gt;This plugin provides a way of querying the meta-data (data fields) of a page
inside the page content (rather than inside a template) This provides a way to
use per-page structured data, where each page is treated like a record, and the
structured data are fields in that record.  This can include the meta-data for
that page, such as the page title.&lt;/p&gt;

&lt;p&gt;This plugin is meant to be used in conjunction with the &lt;a href=&quot;http://project-renard.github.io//tag/type/format/../../../rubykat-ikiplugins/doc/plugins/contrib/field/&quot;&gt;field&lt;/a&gt; plugin.&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;USAGE&lt;/h3&gt;

&lt;p&gt;One can get the value of a field by using special markup in the page.
This does not use directive markup, in order to make it easier to
use the markup inside other directives.  There are four forms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;{{$&lt;em&gt;fieldname&lt;/em&gt;}}&lt;/p&gt;

&lt;p&gt;This queries the value of &lt;em&gt;fieldname&lt;/em&gt; for the source page.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[!meta  title=&quot;My Long and Complicated Title With Potential For Spelling Mistakes&quot;]]
# {{&amp;#036;title}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the page is processed, this will give you:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;My Long and Complicated Title With Potential For Spelling Mistakes&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{{$&lt;em&gt;pagename&lt;/em&gt;#&lt;em&gt;fieldname&lt;/em&gt;}}&lt;/p&gt;

&lt;p&gt;This queries the value of &lt;em&gt;fieldname&lt;/em&gt; for the page &lt;em&gt;pagename&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;On PageFoo:&lt;/p&gt;

&lt;p&gt;[[!meta  title=&quot;I Am Page Foo&quot;]]&lt;/p&gt;

&lt;p&gt;Stuff about Foo.&lt;/p&gt;

&lt;p&gt;On PageBar:&lt;/p&gt;

&lt;p&gt;For more info, see [[{{$PageFoo#title}}|PageFoo]].&lt;/p&gt;

&lt;p&gt;When PageBar is displayed:&lt;/p&gt;

&lt;p&gt;&amp;lt;p&amp;gt;For more info, see &amp;lt;a href=&quot;PageFoo&quot;&amp;gt;I Am Page Foo&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{{+$&lt;em&gt;fieldname&lt;/em&gt;+}}&lt;/p&gt;

&lt;p&gt;This queries the value of &lt;em&gt;fieldname&lt;/em&gt; for the destination page; that is,
the value when this page is included inside another page.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;On PageA:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[!meta  title=&quot;I Am Page A&quot;]]
# {{+&amp;#036;title+}}


Stuff about A.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On PageB:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[!meta  title=&quot;I Am Page B&quot;]]
[[!inline  pagespec=&quot;PageA&quot;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When PageA is displayed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;I Am Page A&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Stuff about A.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When PageB is displayed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;I Am Page B&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Stuff about A.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{{+$&lt;em&gt;pagename&lt;/em&gt;#&lt;em&gt;fieldname&lt;/em&gt;+}}&lt;/p&gt;

&lt;p&gt;This queries the value of &lt;em&gt;fieldname&lt;/em&gt; for the page &lt;em&gt;pagename&lt;/em&gt;; the
only difference between this and {{$&lt;em&gt;pagename&lt;/em&gt;#&lt;em&gt;fieldname&lt;/em&gt;}} is
that the full name of &lt;em&gt;pagename&lt;/em&gt; is calculated relative to the
destination page rather than the source page.&lt;/p&gt;

&lt;p&gt;I can&#39;t really think of a reason why this should be needed, but
this format has been added for completeness.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;escaping&quot;&gt;Escaping&lt;/h3&gt;

&lt;p&gt;Getfield markup can be escaped by putting a backwards slash &lt;code&gt;\&lt;/code&gt;
in front of the markup.
If that is done, then the markup is displayed as-is.&lt;/p&gt;

&lt;h3 id=&quot;novaluefound&quot;&gt;No Value Found&lt;/h3&gt;

&lt;p&gt;If no value is found for the given field, then the field name is returned.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;On PageFoo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[!meta  title=&quot;Foo&quot;]]
My title is {{&amp;#036;title}}.

My description is {{&amp;#036;description}}.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When PageFoo is displayed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;My title is Foo.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;My description is description.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is because &quot;description&quot; hasn&#39;t been defined for that page.&lt;/p&gt;

&lt;h3 id=&quot;moreexamples&quot;&gt;More Examples&lt;/h3&gt;

&lt;p&gt;Listing all the sub-pages of the current page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[!map  pages=&quot;{{&amp;#036;page}}/*&quot;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;download&quot;&gt;DOWNLOAD&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;browse at GitHub: &lt;a href=&quot;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/getfield.pm&quot;&gt;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/getfield.pm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git repo at git://github.com/rubykat/ikiplugins.git&lt;/li&gt;
&lt;/ul&gt;

	</content>



</entry>
<entry>
	<title>report</title>

	<id>http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/report/</id>

	<link href="http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/report/"/>






	<category term="type/format" />

	<category term="type/meta" />


	<updated>2016-02-21T00:53:05Z</updated>
	<published>2016-02-21T00:53:05Z</published>

	<content type="html" xml:lang="en">
	&lt;p&gt;[[!template &lt;span class=&quot;error&quot;&gt;Error: failed to process template &lt;span class=&quot;createlink&quot;&gt;plugin&lt;/span&gt; &lt;/span&gt;]]&lt;/p&gt;

&lt;p&gt;IkiWiki::Plugin::report - Produce templated reports from page field data.&lt;/p&gt;

&lt;p&gt;This plugin provides the &lt;a href=&quot;http://project-renard.github.io//tag/type/format/../../../rubykat-ikiplugins/doc/ikiwiki/directive/report/&quot;&gt;report&lt;/a&gt; directive.  This enables
one to report on the structured data (&quot;field&quot; values) of multiple pages; the
output is formatted via a template.  This depends on the
&lt;a href=&quot;http://project-renard.github.io//tag/type/format/../../../rubykat-ikiplugins/doc/plugins/contrib/field/&quot;&gt;field&lt;/a&gt; plugin.&lt;/p&gt;

&lt;h2 id=&quot;activatetheplugin&quot;&gt;Activate the plugin&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# activate the plugin
add_plugins =&amp;gt; [qw{goodstuff report ....}],
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;PREREQUISITES&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;IkiWiki
IkiWiki::Plugin::field
HTML::Template
Encode
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;download&quot;&gt;DOWNLOAD&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;browse at GitHub: &lt;a href=&quot;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/report.pm&quot;&gt;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/report.pm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git repo at git://github.com/rubykat/ikiplugins.git&lt;/li&gt;
&lt;/ul&gt;

	</content>



</entry>
<entry>
	<title>pod</title>

	<id>http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/pod/</id>

	<link href="http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/pod/"/>






	<category term="type/format" />


	<updated>2016-02-21T00:53:05Z</updated>
	<published>2016-02-21T00:53:05Z</published>

	<content type="html" xml:lang="en">
	&lt;p&gt;[[!template &lt;span class=&quot;error&quot;&gt;Error: failed to process template &lt;span class=&quot;createlink&quot;&gt;plugin&lt;/span&gt; &lt;/span&gt;]]&lt;/p&gt;

&lt;h2 id=&quot;name&quot;&gt;NAME&lt;/h2&gt;

&lt;p&gt;IkiWiki::Plugin::pod - process pages written in POD format.&lt;/p&gt;

&lt;h2 id=&quot;synopsis&quot;&gt;SYNOPSIS&lt;/h2&gt;

&lt;p&gt;In the ikiwiki setup file, enable this plugin by adding it to the
list of active plugins.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;add_plugins =&amp;gt; [qw{goodstuff pod ....}],
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;description&quot;&gt;DESCRIPTION&lt;/h2&gt;

&lt;p&gt;IkiWiki::Plugin::pod is an IkiWiki plugin enabling ikiwiki to
process pages written in POD (&lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Documentation&quot;&gt;Plain Old Documentation&lt;/a&gt;) format.
This will treat files with a &lt;code&gt;.pod&lt;/code&gt; or &lt;code&gt;.pm&lt;/code&gt; extension as files
which contain POD markup.&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;OPTIONS&lt;/h2&gt;

&lt;p&gt;The following options can be set in the ikiwiki setup file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pod_index:&lt;/strong&gt; If true, this will generate an index (table of contents) for the page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pod_toplink:&lt;/strong&gt; The label to be used for links back to the top of the page.  If this is empty, then no top-links will be generated.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;PREREQUISITES&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;IkiWiki
Pod::Xhtml
IO::String
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;download&quot;&gt;DOWNLOAD&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;browse at GitHub: &lt;a href=&quot;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/pod.pm&quot;&gt;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/pod.pm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git repo at git://github.com/rubykat/ikiplugins.git&lt;/li&gt;
&lt;/ul&gt;

	</content>



</entry>
<entry>
	<title>ftemplate</title>

	<id>http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/ftemplate/</id>

	<link href="http://project-renard.github.io//rubykat-ikiplugins/doc/plugins/contrib/ftemplate/"/>






	<category term="type/format" />

	<category term="type/meta" />


	<updated>2016-02-21T00:53:05Z</updated>
	<published>2016-02-21T00:53:05Z</published>

	<content type="html" xml:lang="en">
	&lt;p&gt;[[!template &lt;span class=&quot;error&quot;&gt;Error: failed to process template &lt;span class=&quot;createlink&quot;&gt;plugin&lt;/span&gt; &lt;/span&gt;]]&lt;/p&gt;

&lt;p&gt;This plugin provides the &lt;a href=&quot;http://project-renard.github.io//tag/type/format/../../../rubykat-ikiplugins/doc/ikiwiki/directive/ftemplate/&quot;&gt;ftemplate&lt;/a&gt; directive.&lt;/p&gt;

&lt;p&gt;This is like the &lt;span class=&quot;createlink&quot;&gt;template&lt;/span&gt; directive, with the addition
that one does not have to provide all the values in the call to the template,
because ftemplate can query structured data (&quot;fields&quot;) using the &lt;a href=&quot;http://project-renard.github.io//tag/type/format/../../../rubykat-ikiplugins/doc/plugins/contrib/field/&quot;&gt;field&lt;/a&gt;
plugin.&lt;/p&gt;

&lt;h2 id=&quot;activatetheplugin&quot;&gt;Activate the plugin&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;add_plugins =&amp;gt; [qw{goodstuff ftemplate ....}],
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;PREREQUISITES&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;IkiWiki
IkiWiki::Plugin::field
HTML::Template
Encode
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;download&quot;&gt;DOWNLOAD&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;browse at GitHub: &lt;a href=&quot;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/ftemplate.pm&quot;&gt;http://github.com/rubykat/ikiplugins/blob/master/IkiWiki/Plugin/ftemplate.pm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git repo at git://github.com/rubykat/ikiplugins.git&lt;/li&gt;
&lt;/ul&gt;

	</content>



</entry>

</feed>
